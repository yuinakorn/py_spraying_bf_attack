import requests
from bs4 import BeautifulSoup
import json

def debug_login_page():
    """‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÇ‡∏Ñ‡∏£‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ç‡∏≠‡∏á‡∏´‡∏ô‡πâ‡∏≤ login ‡πÅ‡∏•‡∏∞‡∏´‡∏≤ CSRF Token"""
    
    # ‡∏•‡∏≠‡∏á URL ‡∏´‡∏•‡∏≤‡∏¢‡πÅ‡∏ö‡∏ö
    urls_to_try = [
        "https://smartoffice.chiangmaihealth.go.th/login",
        "https://smartoffice.chiangmaihealth.go.th/Login",
        "https://smartoffice.chiangmaihealth.go.th/Account/Login",
        "https://smartoffice.chiangmaihealth.go.th/account/login",
        "https://smartoffice.chiangmaihealth.go.th/",
        "https://smartoffice.chiangmaihealth.go.th"
    ]
    
    # ‡πÄ‡∏£‡∏¥‡πà‡∏° session
    session = requests.Session()
    
    # ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ headers
    session.headers.update({
        'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36',
        'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8',
        'Accept-Language': 'th-TH,th;q=0.9,en;q=0.8',
        'Accept-Encoding': 'gzip, deflate, br',
        'Connection': 'keep-alive',
        'Upgrade-Insecure-Requests': '1'
    })
    
    for url in urls_to_try:
        print(f"üîç ‡∏ó‡∏î‡∏™‡∏≠‡∏ö URL: {url}")
        print("-" * 50)
        
        try:
            # ‡πÇ‡∏´‡∏•‡∏î‡∏´‡∏ô‡πâ‡∏≤
            print("üì° ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÇ‡∏´‡∏•‡∏î‡∏´‡∏ô‡πâ‡∏≤...")
            response = session.get(url, allow_redirects=True)
            
            print(f"üìä Status Code: {response.status_code}")
            print(f"üìè Content Length: {len(response.text)} characters")
            print(f"üìç Final URL: {response.url}")
            
            # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö response headers
            print("üìã Response Headers:")
            for key, value in response.headers.items():
                if key.lower() in ['content-type', 'location', 'set-cookie']:
                    print(f"   {key}: {value}")
            print("-" * 30)
            
            # Parse HTML
            soup = BeautifulSoup(response.text, 'html.parser')
            
            # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö title
            title = soup.find('title')
            if title:
                print(f"üìÑ Title: {title.text.strip()}")
            else:
                print("‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö title")
            
            # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö input fields ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
            inputs = soup.find_all('input')
            print(f"üîç ‡∏û‡∏ö input fields ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô: {len(inputs)}")
            
            if inputs:
                for i, input_field in enumerate(inputs, 1):
                    input_type = input_field.get('type', 'text')
                    input_name = input_field.get('name', '‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏ä‡∏∑‡πà‡∏≠')
                    input_id = input_field.get('id', '‡πÑ‡∏°‡πà‡∏°‡∏µ ID')
                    input_value = input_field.get('value', '‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ñ‡πà‡∏≤')
                    
                    print(f"   {i}. Type: {input_type}, Name: {input_name}, ID: {input_id}")
                    if input_value:
                        print(f"      Value: {input_value[:50]}{'...' if len(input_value) > 50 else ''}")
            
            # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö form
            forms = soup.find_all('form')
            print(f"üìù ‡∏û‡∏ö form ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô: {len(forms)}")
            
            if forms:
                for i, form in enumerate(forms, 1):
                    form_action = form.get('action', '‡πÑ‡∏°‡πà‡∏°‡∏µ action')
                    form_method = form.get('method', 'GET')
                    print(f"   {i}. Action: {form_action}, Method: {form_method}")
            
            # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö CSRF Token
            csrf_names = [
                '__RequestVerificationToken',
                'csrf_token',
                'csrf',
                '_token',
                'token',
                'antiforgery',
                '__RequestVerificationToken__'
            ]
            
            csrf_found = False
            for csrf_name in csrf_names:
                csrf_input = soup.find('input', {'name': csrf_name})
                if csrf_input:
                    print(f"‚úÖ ‡∏û‡∏ö CSRF Token: {csrf_name}")
                    print(f"   Value: {csrf_input.get('value', '‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ñ‡πà‡∏≤')}")
                    csrf_found = True
                    break
            
            if not csrf_found:
                # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö input ‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏Ñ‡∏≥‡∏ß‡πà‡∏≤ token ‡∏´‡∏£‡∏∑‡∏≠ csrf
                token_inputs = soup.find_all('input', {'name': lambda x: x and ('token' in x.lower() or 'csrf' in x.lower())})
                if token_inputs:
                    print("üîç ‡∏û‡∏ö input ‡∏ó‡∏µ‡πà‡∏≠‡∏≤‡∏à‡πÄ‡∏õ‡πá‡∏ô CSRF Token:")
                    for token_input in token_inputs:
                        print(f"   Name: {token_input.get('name')}, Value: {token_input.get('value', '‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ñ‡πà‡∏≤')}")
            
            # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö meta tags
            meta_tags = soup.find_all('meta')
            print(f"üîç ‡∏û‡∏ö meta tags ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô: {len(meta_tags)}")
            
            # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö script tags
            script_tags = soup.find_all('script')
            print(f"üîç ‡∏û‡∏ö script tags ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô: {len(script_tags)}")
            
            if script_tags:
                print("üìú Script tags ‡∏ó‡∏µ‡πà‡∏û‡∏ö:")
                for i, script in enumerate(script_tags[:5], 1):  # ‡πÅ‡∏™‡∏î‡∏á‡πÅ‡∏Ñ‡πà 5 ‡∏≠‡∏±‡∏ô‡πÅ‡∏£‡∏Å
                    src = script.get('src', '‡πÑ‡∏°‡πà‡∏°‡∏µ src')
                    script_type = script.get('type', '‡πÑ‡∏°‡πà‡∏°‡∏µ type')
                    print(f"   {i}. Type: {script_type}, Src: {src}")
                    if not src and script.string:
                        content = script.string.strip()[:100]
                        print(f"      Content: {content}...")
            
            # ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å HTML ‡∏•‡∏á‡πÑ‡∏ü‡∏•‡πå
            filename = f"debug_page_{url.replace('://', '_').replace('/', '_').replace('.', '_')}.html"
            with open(filename, 'w', encoding='utf-8') as f:
                f.write(response.text)
            print(f"üíæ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å HTML ‡∏•‡∏á‡πÑ‡∏ü‡∏•‡πå {filename} ‡πÅ‡∏•‡πâ‡∏ß")
            
            # ‡∏ñ‡πâ‡∏≤‡∏û‡∏ö input fields ‡∏´‡∏£‡∏∑‡∏≠ forms ‡πÉ‡∏´‡πâ‡∏´‡∏¢‡∏∏‡∏î
            if inputs or forms:
                print("‚úÖ ‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÅ‡∏•‡πâ‡∏ß!")
                break
                
        except Exception as e:
            print(f"‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: {e}")
        
        print("=" * 80)
        print()

if __name__ == "__main__":
    debug_login_page() 